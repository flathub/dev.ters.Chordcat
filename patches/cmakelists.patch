Description: Remove all FetchContent from CMakeLists
 It seems like network fetching during build is discouraged
 in flatpak, so I am removing all FetchContent.
Forwarded: not-needed
Author: Shriram Ravindranathan <s20n@ters.dev>

---
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 9515b80..6a3dbb8 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -20,30 +20,18 @@ find_package(
   REQUIRED)
 
 # REMIDI
-FetchContent_Declare(
-  REMIDI
-  GIT_REPOSITORY https://github.com/jcelerier/libremidi.git
-  GIT_TAG v4.5.0)
-FetchContent_MakeAvailable(REMIDI)
+find_package(libremidi 4.5.0 REQUIRED)
 
 # FluidSynth
 find_package(FluidSynth REQUIRED)
 
 # ImGui
-FetchContent_Declare(
-  ImGui
-  GIT_REPOSITORY https://github.com/ocornut/imgui.git
-  GIT_TAG v1.91.8)
-FetchContent_MakeAvailable(ImGui)
-
-# ImGui-SFML
-set(IMGUI_DIR ${imgui_SOURCE_DIR})
-set(IMGUI_SFML_FIND_SFML OFF)
-FetchContent_Declare(
-  ImGui-SFML
-  GIT_REPOSITORY https://github.com/SFML/imgui-sfml.git
-  GIT_TAG v3.0)
-FetchContent_MakeAvailable(ImGui-SFML)
+set(IMGUI_DIR "imgui-1.91.8")
+set(IMGUI_SFML_DIR "imgui-sfml-3.0")
+include_directories(${IMGUI_DIR})
+include_directories(${IMGUI_SFML_DIR})
+find_package(OpenGL REQUIRED)
+include_directories( ${OPENGL_INCLUDE_DIRS} )
 
 # nlohmann/json
 find_package(nlohmann_json REQUIRED)
@@ -71,16 +59,17 @@ message(STATUS "Chordcat assets path: ${APP_ASSETS_PATH}")
 configure_file(src/config.h.in config/config.h)
 
 file(GLOB src_files CONFIGURE_DEPENDS "src/*.cpp")
+file(GLOB imgui_srcs CONFIGURE_DEPENDS "${IMGUI_DIR}/*.cpp")
 include_directories(${CMAKE_BINARY_DIR}/config)
 
 if(WIN32)
   set(desktop_files desktop/chordcat.rc)
 endif()
 
-add_executable(${PROJECT_NAME} ${src_files} ${desktop_files})
+add_executable(${PROJECT_NAME} ${src_files} ${desktop_files} ${IMGUI_SFML_DIR}/imgui-SFML.cpp ${imgui_srcs} ${IMGUI_DIR}/backends/imgui_impl_opengl3.cpp)
 target_link_libraries(
   ${PROJECT_NAME} PRIVATE SFML::Graphics SFML::Audio SFML::System fluidsynth
-                          ImGui-SFML::ImGui-SFML)
+                          ${OPENGL_LIBRARIES})
 target_link_libraries(${PROJECT_NAME} PUBLIC $<BUILD_INTERFACE:libremidi>)
 target_compile_features(${PROJECT_NAME} PRIVATE cxx_std_20)
 
